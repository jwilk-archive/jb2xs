#!/usr/bin/python

from __future__ import print_function

import sys
import itertools

nodes = set()

PARENT = {}
SPARENT = {}

for line in sys.stdin:
    x, y = map(int, line.split())
    PARENT[x] = y
    nodes.add(x)
    nodes.add(y)
    z = y
    while z in SPARENT:
        z = SPARENT[z]
    SPARENT[x] = superparent = z
    z = y
    while y in SPARENT:
        z = SPARENT[y]
        SPARENT[y] = superparent
        y = z

def second(t):
    return t[1]
groups = [
    frozenset([superparent] + [node for (node, _) in nodes])
    for superparent, nodes in itertools.groupby(sorted(SPARENT.items(), key=second), second)
]
groups.sort(key=len)

last_size = None
last_id = 0
for group in groups:
    if len(group) != last_size:
        last_id = 0
    with open('S%04d.%04d.dot' % (len(group), last_id), 'w') as file:
        print('digraph shapes {', file=file)
        print('\tgraph [overlap=false]', file=file)
        print('\tnode [color="#ff0000"]', file=file)
        for i in group:
            if i in PARENT:
                print('\tshape%d -> shape%d' % (i, PARENT[i]), file=file)
            print('\tshape%d [shapefile="%06d.png", label=\"\"]' % (i, i), file=file)
        print('}', file=file)

    last_size = len(group)
    last_id += 1

# vim:ts=4 sts=4 sw=4 et
